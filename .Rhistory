runApp()
deployApp()
runApp()
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinytest")
library(shinytest)
shinytest::installDependencies()
testAPP(C:\github\student_outcomes_test)
testAPP(C:/github/student_outcomes_test)
getwd()
testApp()
testApp("C:/github/student_outcomes_test")
shinytest()
appDir()
getwd()
testApp()
# reading data from sharepoint
students_download <- read.csv("../data/SO_Data_Viewer_Data_2016_2018.csv", header=T)
# reading data from sharepoint
students_download <- read.csv(".../data/SO_Data_Viewer_Data_2016_2018.csv", header=T)
getwd()
# reading data from sharepoint
students_download <- read.csv("C:/github/student_outcomes_test/data/SO_Data_Viewer_Data_2016_2018.csv", header=T)
students <- read.csv("C:/github/student_outcomes_test/data/data/SO_Data_Viewer_Data_2016_2018.csv", header=T)
students <- read.csv("C:/github/student_outcomes_test/data/SO_Data_Viewer_Data_2016_2018.csv", header=T)
testApp()
getwd()
# reading data from sharepoint
students_download <- read.csv("C:/github/student_outcomes_test/data/SO_Data_Viewer_Data_2016_2018.csv", header=T)
students <- read.csv("C:/github/student_outcomes_test/data/SO_Data_Viewer_Data_2016_2018.csv", header=T)
getwd()
testApp()
students_download <- read.csv("SO_Data_Viewer_Data_2016_2018.csv", header=T)
students <- read.csv("SO_Data_Viewer_Data_2016_2018.csv", header=T)
# reading data from sharepoint
students_download <- read.csv("SO_Data_Viewer_Data_2016_2018.csv", header=T)
# Read libraries
library(shiny) ;library(htmlwidgets); library(tidyr) ; library(flexdashboard); library(shinythemes); library(shinydashboard);library(plotly);library(shinyjs);library(shinycssloaders); library(markdown); library(shinyBS); library(shinyalert)
# read
# reading data from sharepoint
students_download <- read.csv("SO_Data_Viewer_Data_2016_2018.csv", header=T)
# reading data from sharepoint
students_download <- read.csv("SO_Data_Viewer_Data_2016_2018.csv", header=T)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
runApp()
runApp()
shinytest::recordTest("C:/github/student_outcomes_test")
runApp()
runApp()
shinytest::recordTest("C:/github/student_outcomes_test")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shinytest::recordTest("C:/github/student_outcomes_test")
shinytest::recordTest("C:/github/student_outcomes_test")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
students <- read.csv("data/SO_Data_Viewer_Data_2016_2018.csv", header=T)
students %>%
filter(CREDENTIAL == "Apprenticeship")
students %>%
filter(CREDENTIAL == "Apprenticeship") %>%
filter(INSTITUTION_NAME == "All Institutions (public & private)")
students %>%
filter(CREDENTIAL == "Apprenticeship") %>%
filter(INSTITUTION_NAME == "All Institutions (public & private)") %>%
filter((PROGRAM_NAME == "All Programs") | (PROGRAM_NAME == "" ))
a <- students %>%
filter(CREDENTIAL == "Apprenticeship") %>%
filter(INSTITUTION_NAME == "All Institutions (public & private)") %>%
filter((PROGRAM_NAME == "All Programs") | (PROGRAM_NAME == "" ))
View(a)
a <- students %>%
filter(CREDENTIAL == "Apprenticeship") %>%
#filter(INSTITUTION_NAME == "All Institutions (public & private)") %>%
filter((PROGRAM_NAME == "All Programs") | (PROGRAM_NAME == "" ))
View(a)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a <- students %>%
filter(CREDENTIAL == "Apprenticeship") %>%
filter(INSTITUTION_NAME == "All Institutions (public & private)") %>%
filter(PROGRAM_NAME == "" )
View(a)
runApp()
runApp()
runApp()
runApp()
runApp()
shinytest::recordTest("C:/github/student_outcomes_test")
a <- students %>%
filter(CREDENTIAL == "Apprenticeship") %>%
#filter(INSTITUTION_NAME == "All Institutions (public & private)") %>%
filter(PROGRAM_NAME != "" )
View(a)
a <- students %>%
filter(CREDENTIAL == "Apprenticeship") %>%
#filter(INSTITUTION_NAME == "All Institutions (public & private)") %>%
filter(PROGRAM_NAME == "" )
View(a)
a <- students %>%
filter(CREDENTIAL == "Apprenticeship") %>%
#filter(INSTITUTION_NAME == "All Institutions (public & private)") %>%
filter(PROGRAM_NAME != "All Programs" & PROGRAM_NAME != "")
View(a)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
deployApp()
rsconnect::deployApp()
runApp()
runApp()
runApp()
deployAPP()
rsconnect::deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
c
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
runApp()
# reading data from sharepoint
students_download <- read.csv("data/SO_Data_Viewer_Data_2016_2018_vAug13_2019.csv", header=T)
students <- read.csv("data/SO_Data_Viewer_Data_2016_2018_vAug13_2019.csv", header=T)
shiny::runApp()
runApp()
gsub("b","basim")
?gsub()
grep("A","All")
str <- "Now is the time      "
sub(" +$", "", str)
grepl("A","All")
grepl("All","All Programs")
ifelse(grepl("All","All Programs"), "Yes","No")
ifelse(grepl("All","All Programs")==FALSE, "Yes","No")
grepl("All",input$program_name)==FALSE
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
rsconnect::deployApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
# reading data from sharepoint
students_download <- read.csv("data/SO_Data_Viewer_Data_2016_2018_vAug13_2019.csv", header=T)
students <- read.csv("data/SO_Data_Viewer_Data_2016_2018_vAug13_2019.csv", header=T)
students
top <- students %>%
slice(1:nrow(students)-1) %>%
mutate(tempcol1=ifelse(is.na(FURTH_STUDIES), Q11_7,FURTH_STUDIES )) %>%
mutate(FURTH_STUDIES=ifelse(is.na(tempcol1), Q52_6,tempcol1))
#select(1:70, 73)
#filter(!RESPONDENTS==0)
students <- top %>%
#rbind(last_row) %>%
arrange(INSTITUTION_NAME) %>%
mutate(PROGRAM_AREA_NAME2=PROGRAM_AREA_NAME)  # add the second column for program area name to ensure long label don't cut-off in charts
# Change variable Names
names(students)[names(students)=="Q49A"] <- "satisfaction_rate"
names(students)[names(students)=="Q52A"] <- "instruction"
names(students)[names(students)=="Q51NA"] <- "Write_Clearly"
names(students)[names(students)=="Q51NB"] <- "Speak_Clearly"
names(students)[names(students)=="Q51ND"] <- "Work_With_Others"
names(students)[names(students)=="Q51NE1"] <- "Think_Critically"
names(students)[names(students)=="Q51NE2"] <- "Resolve_Issues"
names(students)[names(students)=="Q51NI"] <- "Learn_Independently"
names(students)[names(students)=="Q51NJ"] <- "Read"
#levels(students$CREDENTIAL) <- gsub("Diploma, Associate Degree, and Certificate","Diploma, Associate Degree & Certificate", levels(students$CREDENTIAL))
levels(students$PROGRAM_AREA_NAME) <- gsub("All Trade Groups","Overall", levels(students$PROGRAM_AREA_NAME))
levels(students$PROGRAM_AREA_NAME) <- gsub("All CIP Clusters Expanded","Overall", levels(students$PROGRAM_AREA_NAME))
levels(students$PROGRAM_AREA_NAME) <- gsub("All CIP Clusters","Overall", levels(students$PROGRAM_AREA_NAME))
## adding the below line since the label is too long and will cut-off
levels(students$PROGRAM_AREA_NAME2) <- gsub("Industrial and Heavy Duty Mechanics and Other Repair Trades",HTML(paste0("Industrial and Heavy Duty","<br>","Mechanics and Other Repair Trades")), levels(students$PROGRAM_AREA_NAME2))
levels(students$PROGRAM_AREA_NAME2) <- gsub("Marketing Management (Marketing Communications Option)",HTML(paste0("Marketing Management","<br>","(Marketing Communications Option)")), levels(students$PROGRAM_AREA_NAME2))
levels(students$PROGRAM_AREA_NAME)[levels(students$PROGRAM_AREA_NAME)=="All CIP Clusters Expanded"] <- "Overall"
levels(students$PROGRAM_AREA_NAME) <- gsub('and','&',levels(students$PROGRAM_AREA_NAME)) # replace and with & in all programs
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::deployApp()
runApp()
rsconnect::deployApp()
runApp()
